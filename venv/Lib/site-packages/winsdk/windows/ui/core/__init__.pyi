# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.10

import enum
import datetime
import sys
import types
import typing

import winsdk.system
import winsdk.windows.foundation
import winsdk.windows.foundation.collections
import winsdk.windows.system
import winsdk.windows.ui
import winsdk.windows.ui.composition
import winsdk.windows.ui.input
import winsdk.windows.ui.popups

class AppViewBackButtonVisibility(enum.IntEnum):
    VISIBLE = 0
    COLLAPSED = 1
    DISABLED = 2

class CoreAcceleratorKeyEventType(enum.IntEnum):
    CHARACTER = 2
    DEAD_CHARACTER = 3
    KEY_DOWN = 0
    KEY_UP = 1
    SYSTEM_CHARACTER = 6
    SYSTEM_DEAD_CHARACTER = 7
    SYSTEM_KEY_DOWN = 4
    SYSTEM_KEY_UP = 5
    UNICODE_CHARACTER = 8

class CoreCursorType(enum.IntEnum):
    ARROW = 0
    CROSS = 1
    CUSTOM = 2
    HAND = 3
    HELP = 4
    I_BEAM = 5
    SIZE_ALL = 6
    SIZE_NORTHEAST_SOUTHWEST = 7
    SIZE_NORTH_SOUTH = 8
    SIZE_NORTHWEST_SOUTHEAST = 9
    SIZE_WEST_EAST = 10
    UNIVERSAL_NO = 11
    UP_ARROW = 12
    WAIT = 13
    PIN = 14
    PERSON = 15

class CoreDispatcherPriority(enum.IntEnum):
    IDLE = -2
    LOW = -1
    NORMAL = 0
    HIGH = 1

class CoreIndependentInputFilters(enum.IntFlag):
    NONE = 0
    MOUSE_BUTTON = 0x1
    MOUSE_WHEEL = 0x2
    MOUSE_HOVER = 0x4
    PEN_WITH_BARREL = 0x8
    PEN_INVERTED = 0x10

class CoreInputDeviceTypes(enum.IntFlag):
    NONE = 0
    TOUCH = 0x1
    PEN = 0x2
    MOUSE = 0x4

class CoreProcessEventsOption(enum.IntEnum):
    PROCESS_ONE_AND_ALL_PENDING = 0
    PROCESS_ONE_IF_PRESENT = 1
    PROCESS_UNTIL_QUIT = 2
    PROCESS_ALL_IF_PRESENT = 3

class CoreProximityEvaluationScore(enum.IntEnum):
    CLOSEST = 0
    FARTHEST = 2147483647

class CoreVirtualKeyStates(enum.IntFlag):
    NONE = 0
    DOWN = 0x1
    LOCKED = 0x2

class CoreWindowActivationMode(enum.IntEnum):
    NONE = 0
    DEACTIVATED = 1
    ACTIVATED_NOT_FOREGROUND = 2
    ACTIVATED_IN_FOREGROUND = 3

class CoreWindowActivationState(enum.IntEnum):
    CODE_ACTIVATED = 0
    DEACTIVATED = 1
    POINTER_ACTIVATED = 2

class CoreWindowFlowDirection(enum.IntEnum):
    LEFT_TO_RIGHT = 0
    RIGHT_TO_LEFT = 1

Self = typing.TypeVar('Self')

class CorePhysicalKeyStatus:
    repeat_count: winsdk.system.UInt32
    scan_code: winsdk.system.UInt32
    is_extended_key: winsdk.system.Boolean
    is_menu_key_down: winsdk.system.Boolean
    was_key_down: winsdk.system.Boolean
    is_key_released: winsdk.system.Boolean
    def __new__(cls: typing.Type[CorePhysicalKeyStatus], repeat_count: winsdk.system.UInt32, scan_code: winsdk.system.UInt32, is_extended_key: winsdk.system.Boolean, is_menu_key_down: winsdk.system.Boolean, was_key_down: winsdk.system.Boolean, is_key_released: winsdk.system.Boolean) -> CorePhysicalKeyStatus: ...

class CoreProximityEvaluation:
    score: winsdk.system.Int32
    adjusted_point: winsdk.windows.foundation.Point
    def __new__(cls: typing.Type[CoreProximityEvaluation], score: winsdk.system.Int32, adjusted_point: winsdk.windows.foundation.Point) -> CoreProximityEvaluation: ...

class AcceleratorKeyEventArgs(winsdk.system.Object):
    event_type: CoreAcceleratorKeyEventType
    key_status: CorePhysicalKeyStatus
    virtual_key: winsdk.windows.system.VirtualKey
    device_id: str
    handled: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> AcceleratorKeyEventArgs: ...

class AutomationProviderRequestedEventArgs(winsdk.system.Object):
    automation_provider: typing.Optional[winsdk.system.Object]
    handled: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> AutomationProviderRequestedEventArgs: ...

class BackRequestedEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> BackRequestedEventArgs: ...

class CharacterReceivedEventArgs(winsdk.system.Object):
    key_code: winsdk.system.UInt32
    key_status: CorePhysicalKeyStatus
    handled: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CharacterReceivedEventArgs: ...

class ClosestInteractiveBoundsRequestedEventArgs(winsdk.system.Object):
    closest_interactive_bounds: winsdk.windows.foundation.Rect
    pointer_position: winsdk.windows.foundation.Point
    search_bounds: winsdk.windows.foundation.Rect
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> ClosestInteractiveBoundsRequestedEventArgs: ...

class CoreAcceleratorKeys(winsdk.system.Object):
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreAcceleratorKeys: ...
    def add_accelerator_key_activated(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreDispatcher, AcceleratorKeyEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_accelerator_key_activated(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class CoreComponentInputSource(winsdk.system.Object):
    has_focus: winsdk.system.Boolean
    is_input_enabled: winsdk.system.Boolean
    dispatcher: typing.Optional[CoreDispatcher]
    pointer_cursor: typing.Optional[CoreCursor]
    has_capture: winsdk.system.Boolean
    pointer_position: winsdk.windows.foundation.Point
    dispatcher_queue: typing.Optional[winsdk.windows.system.DispatcherQueue]
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreComponentInputSource: ...
    def get_current_key_event_device_id(self) -> str: ...
    def get_current_key_state(self, virtual_key: winsdk.windows.system.VirtualKey, /) -> CoreVirtualKeyStates: ...
    def release_pointer_capture(self) -> None: ...
    def set_pointer_capture(self) -> None: ...
    def add_input_enabled(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, InputEnabledEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_input_enabled(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_capture_lost(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_capture_lost(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_entered(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_entered(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_exited(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_exited(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_moved(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_moved(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_pressed(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_pressed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_released(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_released(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_wheel_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_wheel_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_character_received(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, CharacterReceivedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_character_received(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_key_down(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, KeyEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_key_down(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_key_up(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, KeyEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_key_up(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_got_focus(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, CoreWindowEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_got_focus(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_lost_focus(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, CoreWindowEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_lost_focus(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_touch_hit_testing(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, TouchHitTestingEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_touch_hit_testing(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_closest_interactive_bounds_requested(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreComponentInputSource, ClosestInteractiveBoundsRequestedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_closest_interactive_bounds_requested(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class CoreCursor(winsdk.system.Object):
    id: winsdk.system.UInt32
    type: CoreCursorType
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreCursor: ...
    def __new__(cls: typing.Type[CoreCursor], type: CoreCursorType, id: winsdk.system.UInt32) -> CoreCursor:...

class CoreDispatcher(winsdk.system.Object):
    has_thread_access: winsdk.system.Boolean
    current_priority: CoreDispatcherPriority
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreDispatcher: ...
    def process_events(self, options: CoreProcessEventsOption, /) -> None: ...
    def run_async(self, priority: CoreDispatcherPriority, agile_callback: typing.Optional[DispatchedHandler], /) -> winsdk.windows.foundation.IAsyncAction: ...
    def run_idle_async(self, agile_callback: typing.Optional[IdleDispatchedHandler], /) -> winsdk.windows.foundation.IAsyncAction: ...
    @typing.overload
    def should_yield(self) -> winsdk.system.Boolean: ...
    @typing.overload
    def should_yield(self, priority: CoreDispatcherPriority, /) -> winsdk.system.Boolean: ...
    def stop_process_events(self) -> None: ...
    def try_run_async(self, priority: CoreDispatcherPriority, agile_callback: typing.Optional[DispatchedHandler], /) -> winsdk.windows.foundation.IAsyncOperation[winsdk.system.Boolean]: ...
    def try_run_idle_async(self, agile_callback: typing.Optional[IdleDispatchedHandler], /) -> winsdk.windows.foundation.IAsyncOperation[winsdk.system.Boolean]: ...
    def add_accelerator_key_activated(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreDispatcher, AcceleratorKeyEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_accelerator_key_activated(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class CoreIndependentInputSource(winsdk.system.Object):
    is_input_enabled: winsdk.system.Boolean
    dispatcher: typing.Optional[CoreDispatcher]
    pointer_cursor: typing.Optional[CoreCursor]
    has_capture: winsdk.system.Boolean
    pointer_position: winsdk.windows.foundation.Point
    dispatcher_queue: typing.Optional[winsdk.windows.system.DispatcherQueue]
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreIndependentInputSource: ...
    def release_pointer_capture(self) -> None: ...
    def set_pointer_capture(self) -> None: ...
    def add_input_enabled(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, InputEnabledEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_input_enabled(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_capture_lost(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_capture_lost(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_entered(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_entered(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_exited(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_exited(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_moved(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_moved(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_pressed(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_pressed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_released(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_released(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_wheel_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_wheel_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_routed_away(self, handler: winsdk.windows.foundation.TypedEventHandler[ICorePointerRedirector, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_routed_away(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_routed_released(self, handler: winsdk.windows.foundation.TypedEventHandler[ICorePointerRedirector, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_routed_released(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_routed_to(self, handler: winsdk.windows.foundation.TypedEventHandler[ICorePointerRedirector, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_routed_to(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class CoreIndependentInputSourceController(winsdk.system.Object):
    is_transparent_for_uncontrolled_input: winsdk.system.Boolean
    is_palm_rejection_enabled: winsdk.system.Boolean
    source: typing.Optional[CoreIndependentInputSource]
    def __enter__(self: Self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreIndependentInputSourceController: ...
    def close(self) -> None: ...
    @staticmethod
    def create_for_i_visual_element(visual_element: typing.Optional[winsdk.windows.ui.composition.IVisualElement], /) -> typing.Optional[CoreIndependentInputSourceController]: ...
    @staticmethod
    def create_for_visual(visual: typing.Optional[winsdk.windows.ui.composition.Visual], /) -> typing.Optional[CoreIndependentInputSourceController]: ...
    @typing.overload
    def set_controlled_input(self, input_types: CoreInputDeviceTypes, /) -> None: ...
    @typing.overload
    def set_controlled_input(self, input_types: CoreInputDeviceTypes, required: CoreIndependentInputFilters, excluded: CoreIndependentInputFilters, /) -> None: ...

class CoreWindow(winsdk.system.Object):
    pointer_position: winsdk.windows.foundation.Point
    pointer_cursor: typing.Optional[CoreCursor]
    flow_direction: CoreWindowFlowDirection
    is_input_enabled: winsdk.system.Boolean
    dispatcher: typing.Optional[CoreDispatcher]
    automation_host_provider: typing.Optional[winsdk.system.Object]
    bounds: winsdk.windows.foundation.Rect
    custom_properties: typing.Optional[winsdk.windows.foundation.collections.IPropertySet]
    visible: winsdk.system.Boolean
    activation_mode: CoreWindowActivationMode
    dispatcher_queue: typing.Optional[winsdk.windows.system.DispatcherQueue]
    u_i_context: typing.Optional[winsdk.windows.ui.UIContext]
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreWindow: ...
    def activate(self) -> None: ...
    def close(self) -> None: ...
    def get_async_key_state(self, virtual_key: winsdk.windows.system.VirtualKey, /) -> CoreVirtualKeyStates: ...
    def get_current_key_event_device_id(self) -> str: ...
    @staticmethod
    def get_for_current_thread() -> typing.Optional[CoreWindow]: ...
    def get_key_state(self, virtual_key: winsdk.windows.system.VirtualKey, /) -> CoreVirtualKeyStates: ...
    def release_pointer_capture(self) -> None: ...
    def set_pointer_capture(self) -> None: ...
    def add_activated(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, WindowActivatedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_activated(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_automation_provider_requested(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, AutomationProviderRequestedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_automation_provider_requested(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_character_received(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, CharacterReceivedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_character_received(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_closed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, CoreWindowEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_closed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_input_enabled(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, InputEnabledEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_input_enabled(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_key_down(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, KeyEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_key_down(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_key_up(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, KeyEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_key_up(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_capture_lost(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_capture_lost(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_entered(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_entered(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_exited(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_exited(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_moved(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_moved(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_pressed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_pressed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_released(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_released(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_wheel_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_wheel_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_size_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, WindowSizeChangedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_size_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_touch_hit_testing(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, TouchHitTestingEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_touch_hit_testing(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_visibility_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, VisibilityChangedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_visibility_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_routed_away(self, handler: winsdk.windows.foundation.TypedEventHandler[ICorePointerRedirector, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_routed_away(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_routed_released(self, handler: winsdk.windows.foundation.TypedEventHandler[ICorePointerRedirector, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_routed_released(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_routed_to(self, handler: winsdk.windows.foundation.TypedEventHandler[ICorePointerRedirector, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_routed_to(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_closest_interactive_bounds_requested(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, ClosestInteractiveBoundsRequestedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_closest_interactive_bounds_requested(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_resize_completed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, winsdk.system.Object], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_resize_completed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_resize_started(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, winsdk.system.Object], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_resize_started(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class CoreWindowDialog(winsdk.system.Object):
    title: str
    is_interaction_delayed: winsdk.system.Int32
    default_command_index: winsdk.system.UInt32
    cancel_command_index: winsdk.system.UInt32
    back_button_command: typing.Optional[winsdk.windows.ui.popups.UICommandInvokedHandler]
    commands: typing.Optional[winsdk.windows.foundation.collections.IVector[winsdk.windows.ui.popups.IUICommand]]
    max_size: winsdk.windows.foundation.Size
    min_size: winsdk.windows.foundation.Size
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreWindowDialog: ...
    @typing.overload
    def __new__(cls: typing.Type[CoreWindowDialog], title: str) -> CoreWindowDialog:...
    @typing.overload
    def __new__(cls: typing.Type[CoreWindowDialog]) -> CoreWindowDialog:...
    def show_async(self) -> winsdk.windows.foundation.IAsyncOperation[winsdk.windows.ui.popups.IUICommand]: ...
    def add_showing(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, CoreWindowPopupShowingEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_showing(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class CoreWindowEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreWindowEventArgs: ...

class CoreWindowFlyout(winsdk.system.Object):
    title: str
    is_interaction_delayed: winsdk.system.Int32
    default_command_index: winsdk.system.UInt32
    back_button_command: typing.Optional[winsdk.windows.ui.popups.UICommandInvokedHandler]
    commands: typing.Optional[winsdk.windows.foundation.collections.IVector[winsdk.windows.ui.popups.IUICommand]]
    max_size: winsdk.windows.foundation.Size
    min_size: winsdk.windows.foundation.Size
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreWindowFlyout: ...
    @typing.overload
    def __new__(cls: typing.Type[CoreWindowFlyout], position: winsdk.windows.foundation.Point) -> CoreWindowFlyout:...
    @typing.overload
    def __new__(cls: typing.Type[CoreWindowFlyout], position: winsdk.windows.foundation.Point, title: str) -> CoreWindowFlyout:...
    def show_async(self) -> winsdk.windows.foundation.IAsyncOperation[winsdk.windows.ui.popups.IUICommand]: ...
    def add_showing(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, CoreWindowPopupShowingEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_showing(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class CoreWindowPopupShowingEventArgs(winsdk.system.Object):
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreWindowPopupShowingEventArgs: ...
    def set_desired_size(self, value: winsdk.windows.foundation.Size, /) -> None: ...

class CoreWindowResizeManager(winsdk.system.Object):
    should_wait_for_layout_completion: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> CoreWindowResizeManager: ...
    @staticmethod
    def get_for_current_view() -> typing.Optional[CoreWindowResizeManager]: ...
    def notify_layout_completed(self) -> None: ...

class IdleDispatchedHandlerArgs(winsdk.system.Object):
    is_dispatcher_idle: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> IdleDispatchedHandlerArgs: ...

class InputEnabledEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    input_enabled: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> InputEnabledEventArgs: ...

class KeyEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    key_status: CorePhysicalKeyStatus
    virtual_key: winsdk.windows.system.VirtualKey
    device_id: str
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> KeyEventArgs: ...

class PointerEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    current_point: typing.Optional[winsdk.windows.ui.input.PointerPoint]
    key_modifiers: winsdk.windows.system.VirtualKeyModifiers
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> PointerEventArgs: ...
    def get_intermediate_points(self) -> typing.Optional[winsdk.windows.foundation.collections.IVector[winsdk.windows.ui.input.PointerPoint]]: ...

class SystemNavigationManager(winsdk.system.Object):
    app_view_back_button_visibility: AppViewBackButtonVisibility
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> SystemNavigationManager: ...
    @staticmethod
    def get_for_current_view() -> typing.Optional[SystemNavigationManager]: ...
    def add_back_requested(self, handler: winsdk.windows.foundation.EventHandler[BackRequestedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_back_requested(self, token: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class TouchHitTestingEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    proximity_evaluation: CoreProximityEvaluation
    bounding_box: winsdk.windows.foundation.Rect
    point: winsdk.windows.foundation.Point
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> TouchHitTestingEventArgs: ...
    def evaluate_proximity(self, control_bounding_box: winsdk.windows.foundation.Rect, /) -> CoreProximityEvaluation: ...

class VisibilityChangedEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    visible: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> VisibilityChangedEventArgs: ...

class WindowActivatedEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    window_activation_state: CoreWindowActivationState
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> WindowActivatedEventArgs: ...

class WindowSizeChangedEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    size: winsdk.windows.foundation.Size
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> WindowSizeChangedEventArgs: ...

class ICoreAcceleratorKeys(winsdk.system.Object):
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> ICoreAcceleratorKeys: ...
    def add_accelerator_key_activated(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreDispatcher, AcceleratorKeyEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_accelerator_key_activated(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class ICoreInputSourceBase(winsdk.system.Object):
    dispatcher: typing.Optional[CoreDispatcher]
    is_input_enabled: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> ICoreInputSourceBase: ...
    def add_input_enabled(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, InputEnabledEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_input_enabled(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class ICorePointerInputSource(winsdk.system.Object):
    has_capture: winsdk.system.Boolean
    pointer_cursor: typing.Optional[CoreCursor]
    pointer_position: winsdk.windows.foundation.Point
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> ICorePointerInputSource: ...
    def release_pointer_capture(self) -> None: ...
    def set_pointer_capture(self) -> None: ...
    def add_pointer_capture_lost(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_capture_lost(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_entered(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_entered(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_exited(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_exited(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_moved(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_moved(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_pressed(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_pressed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_released(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_released(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_wheel_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_wheel_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class ICorePointerInputSource2(winsdk.system.Object):
    dispatcher_queue: typing.Optional[winsdk.windows.system.DispatcherQueue]
    has_capture: winsdk.system.Boolean
    pointer_cursor: typing.Optional[CoreCursor]
    pointer_position: winsdk.windows.foundation.Point
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> ICorePointerInputSource2: ...
    def release_pointer_capture(self) -> None: ...
    def set_pointer_capture(self) -> None: ...
    def add_pointer_capture_lost(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_capture_lost(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_entered(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_entered(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_exited(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_exited(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_moved(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_moved(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_pressed(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_pressed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_released(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_released(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_wheel_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[winsdk.system.Object, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_wheel_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class ICorePointerRedirector(winsdk.system.Object):
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> ICorePointerRedirector: ...
    def add_pointer_routed_away(self, handler: winsdk.windows.foundation.TypedEventHandler[ICorePointerRedirector, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_routed_away(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_routed_released(self, handler: winsdk.windows.foundation.TypedEventHandler[ICorePointerRedirector, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_routed_released(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_routed_to(self, handler: winsdk.windows.foundation.TypedEventHandler[ICorePointerRedirector, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_routed_to(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class ICoreWindow(winsdk.system.Object):
    automation_host_provider: typing.Optional[winsdk.system.Object]
    bounds: winsdk.windows.foundation.Rect
    custom_properties: typing.Optional[winsdk.windows.foundation.collections.IPropertySet]
    dispatcher: typing.Optional[CoreDispatcher]
    flow_direction: CoreWindowFlowDirection
    is_input_enabled: winsdk.system.Boolean
    pointer_cursor: typing.Optional[CoreCursor]
    pointer_position: winsdk.windows.foundation.Point
    visible: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> ICoreWindow: ...
    def activate(self) -> None: ...
    def close(self) -> None: ...
    def get_async_key_state(self, virtual_key: winsdk.windows.system.VirtualKey, /) -> CoreVirtualKeyStates: ...
    def get_key_state(self, virtual_key: winsdk.windows.system.VirtualKey, /) -> CoreVirtualKeyStates: ...
    def release_pointer_capture(self) -> None: ...
    def set_pointer_capture(self) -> None: ...
    def add_activated(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, WindowActivatedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_activated(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_automation_provider_requested(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, AutomationProviderRequestedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_automation_provider_requested(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_character_received(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, CharacterReceivedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_character_received(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_closed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, CoreWindowEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_closed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_input_enabled(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, InputEnabledEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_input_enabled(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_key_down(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, KeyEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_key_down(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_key_up(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, KeyEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_key_up(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_capture_lost(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_capture_lost(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_entered(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_entered(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_exited(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_exited(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_moved(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_moved(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_pressed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_pressed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_released(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_released(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_pointer_wheel_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, PointerEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_pointer_wheel_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_size_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, WindowSizeChangedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_size_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_touch_hit_testing(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, TouchHitTestingEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_touch_hit_testing(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...
    def add_visibility_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[CoreWindow, VisibilityChangedEventArgs], /) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_visibility_changed(self, cookie: winsdk.windows.foundation.EventRegistrationToken, /) -> None: ...

class ICoreWindowEventArgs(winsdk.system.Object):
    handled: winsdk.system.Boolean
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> ICoreWindowEventArgs: ...

class IInitializeWithCoreWindow(winsdk.system.Object):
    @staticmethod
    def _from(obj: winsdk.system.Object, /) -> IInitializeWithCoreWindow: ...
    def initialize(self, window: typing.Optional[CoreWindow], /) -> None: ...

DispatchedHandler = typing.Callable[[], None]

IdleDispatchedHandler = typing.Callable[[typing.Optional[IdleDispatchedHandlerArgs]], None]

